plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'devlog'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // ---------- SPRING BOOT ----------
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ---------- DEVELOPERS ----------
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // ---------- WEB ----------
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ---------- SECURITY ----------
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ---------- SQL ----------
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ---------- I/O ----------
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ---------- OPS ----------
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // ---------- OBSERVABILITY ----------
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // ---------- TESTING ----------
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // ----------- OTHER ----------

    // JWT
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

asciidoctor {
    dependsOn test
    configurations 'asciidoctorExt'
}

tasks.register('copyApiDocument', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file("src/main/resources/static/docs")
    }
    from asciidoctor.outputDir
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyApiDocument
}

clean {
    delete file('src/main/generated')
}